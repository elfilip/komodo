/*
 * JBoss, Home of Professional Open Source.
 * See the COPYRIGHT.txt file distributed with this work for information
 * regarding copyright ownership.  Some portions may be licensed
 * to Red Hat, Inc. under one or more contributor license agreements.
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301 USA.
 */

//------------------------------------------------------------------------------
// @ g e n e r a t e d   u s i n g   o r g . k o m o d o . m o d e s h a p e . t e i i d . g e n e r a t o r s . T e i i d C n d G e n e r a t o r
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// N A M E S P A C E S
//------------------------------------------------------------------------------
<jcr='http://www.jcp.org/jcr/1.0'>
<nt='http://www.jcp.org/jcr/nt/1.0'>
<mix='http://www.jcp.org/jcr/mix/1.0'>
<tsql='http://www.teiid.org/sql/1.0'>

//------------------------------------------------------------------------------
// N O D E T Y P E S
//------------------------------------------------------------------------------
//==================================================
//  Derived from Language Object Interfaces
//==================================================
[tsql:targetedCommand] mixin
	+ tsql:group (tsql:groupSymbol)

[tsql:languageObject] mixin
	- tsql:teiidVersion (string)

[tsql:expression]	>	tsql:languageObject mixin
	- tsql:typeClass (string)

[tsql:predicateCriteria]	>	tsql:expression mixin

[tsql:subqueryContainer]	>	tsql:languageObject mixin
	+ tsql:command (tsql:command)

[tsql:expressionStatement] mixin
	- tsql:expectedTypeClass (string)
	+ tsql:expression (tsql:expression)

[tsql:labeled] mixin
	- tsql:label (string)

//==================================================
//  Derived from Language Object Classes
//==================================================
[tsql:criteria]	>	tsql:expression mixin

[tsql:abstractCompareCriteria]	>	tsql:criteria, tsql:predicateCriteria mixin abstract
	- tsql:operator (string) < "EQ", "NE", "LT", "GT", "LE", "GE"
	+ tsql:leftExpression (tsql:expression)

[tsql:compareCriteria]	>	tsql:abstractCompareCriteria mixin
	- tsql:optional (boolean)
	+ tsql:rightExpression (tsql:expression)

[tsql:subqueryCompareCriteria]	>	tsql:abstractCompareCriteria, tsql:subqueryContainer mixin
	- tsql:predicateQuantifier (string) < "SOME", "ANY", "ALL"

[tsql:abstractSetCriteria]	>	tsql:criteria, tsql:predicateCriteria mixin abstract
	- tsql:negated (boolean)
	+ tsql:expression (tsql:expression)

[tsql:setCriteria]	>	tsql:abstractSetCriteria mixin
	+ tsql:values (tsql:expression) sns

[tsql:subquerySetCriteria]	>	tsql:abstractSetCriteria, tsql:subqueryContainer mixin
	+ tsql:subqueryHint (tsql:subqueryHint)

[tsql:betweenCriteria]	>	tsql:criteria, tsql:predicateCriteria mixin
	- tsql:negated (boolean)
	+ tsql:lowerExpression (tsql:expression)
	+ tsql:expression (tsql:expression)
	+ tsql:upperExpression (tsql:expression)

[tsql:compoundCriteria]	>	tsql:criteria mixin
	- tsql:operator (long)
	+ tsql:criteria (tsql:criteria) sns

[tsql:existsCriteria]	>	tsql:criteria, tsql:predicateCriteria, tsql:subqueryContainer mixin
	- tsql:negated (boolean)
	+ tsql:subqueryHint (tsql:subqueryHint)

[tsql:expressionCriteria]	>	tsql:criteria mixin
	+ tsql:expression (tsql:expression)

[tsql:isNullCriteria]	>	tsql:criteria, tsql:predicateCriteria mixin
	- tsql:negated (boolean)
	+ tsql:expression (tsql:expression)

[tsql:matchCriteria]	>	tsql:criteria, tsql:predicateCriteria mixin
	- tsql:negated (boolean)
	- tsql:escapeChar (string)
	- tsql:mode (string) < "LIKE", "SIMILAR", "REGEX"
	+ tsql:leftExpression (tsql:expression)
	+ tsql:rightExpression (tsql:expression)

[tsql:notCriteria]	>	tsql:criteria mixin
	+ tsql:criteria (tsql:criteria)

[tsql:command]	>	tsql:languageObject mixin abstract
	- tsql:type (long)
	- tsql:isResolved (boolean)
	+ tsql:sourceHint (tsql:sourceHint)
	+ tsql:option (tsql:option)

[tsql:alter]	>	tsql:command mixin abstract
	+ tsql:definition (tsql:command)
	+ tsql:target (tsql:groupSymbol)

[tsql:alterProcedure]	>	tsql:alter mixin

[tsql:alterTrigger]	>	tsql:alter mixin
	- tsql:event (string) < "INSERT", "UPDATE", "DELETE"
	- tsql:enabled (boolean)
	- tsql:create (boolean)

[tsql:alterView]	>	tsql:alter mixin

[tsql:procedureContainer]	>	tsql:command mixin abstract

[tsql:delete]	>	tsql:procedureContainer, tsql:targetedCommand mixin
	+ tsql:criteria (tsql:criteria)

[tsql:insert]	>	tsql:procedureContainer, tsql:targetedCommand mixin
	- tsql:merge (boolean)
	+ tsql:queryExpression (tsql:queryCommand)
	+ tsql:values (tsql:expression) sns
	+ tsql:variables (tsql:elementSymbol) sns

[tsql:storedProcedure]	>	tsql:procedureContainer, tsql:targetedCommand mixin
	- tsql:displayNamedParameters (boolean)
	- tsql:calledWithReturn (boolean)
	- tsql:callableStatement (boolean)
	- tsql:procedureName (string)
	- tsql:procedureCallableName (string)
	- tsql:procedureiD (string)
	+ tsql:parameters (tsql:spParameter) sns

[tsql:update]	>	tsql:procedureContainer, tsql:targetedCommand mixin
	+ tsql:changeList (tsql:setClauseList)
	+ tsql:criteria (tsql:criteria)

[tsql:dynamicCommand]	>	tsql:command mixin
	- tsql:asClauseSet (boolean)
	- tsql:updatingModelCount (long)
	+ tsql:asColumns (tsql:elementSymbol) sns
	+ tsql:using (tsql:setClauseList)
	+ tsql:sql (tsql:expression)
	+ tsql:intoGroup (tsql:groupSymbol)

[tsql:queryCommand]	>	tsql:command mixin abstract
	+ tsql:with (tsql:withQueryCommand) sns
	+ tsql:orderBy (tsql:orderBy)
	+ tsql:limit (tsql:limit)

[tsql:query]	>	tsql:queryCommand mixin
	- tsql:rowConstructor (boolean)
	+ tsql:into (tsql:into)
	+ tsql:having (tsql:criteria)
	+ tsql:groupBy (tsql:groupBy)
	+ tsql:from (tsql:from)
	+ tsql:criteria (tsql:criteria)
	+ tsql:select (tsql:select)
	
[tsql:create] > tsql:command mixin
	- tsql:onCommit (string)
	+ tsql:table (tsql:groupSymbol)
	+ tsql:tableColumn (tsql:multipleElementSymbol)
	+ tsql:primaryKeyColumn (tsql:multipleElementSymbol)	

[tsql:setQuery]	>	tsql:queryCommand mixin
	- tsql:all (boolean)
	- tsql:operation (string) < "UNION", "INTERSECT", "EXCEPT"
	+ tsql:leftQuery (tsql:queryCommand)
	+ tsql:rightQuery (tsql:queryCommand)

[tsql:createProcedureCommand]	>	tsql:command mixin
	+ tsql:block (tsql:block)
	+ tsql:virtualGroup (tsql:groupSymbol)

[tsql:triggerAction]	>	tsql:command mixin
	+ tsql:block (tsql:block)

[tsql:fromClause]	>	tsql:languageObject mixin abstract
	- tsql:preserve (boolean)
	- tsql:makeDep (boolean)
	- tsql:optional (boolean)
	- tsql:makeNotDep (boolean)
	- tsql:makeInd (boolean)
	- tsql:noUnnest (boolean)
	+ tsql:makeDependency (tsql:makeDep)

[tsql:tableFunctionReference]	>	tsql:fromClause mixin abstract
	- tsql:name (string)

[tsql:arrayTable]	>	tsql:tableFunctionReference mixin
	+ tsql:columns (tsql:projectedColumn) sns
	+ tsql:arrayValue (tsql:expression)

[tsql:objectTable]	>	tsql:tableFunctionReference mixin
	- tsql:rowScript (string)
	- tsql:scriptingLanguage (string)
	+ tsql:columns (tsql:objectColumn) sns
	+ tsql:passing (tsql:derivedColumn) sns

[tsql:textTable]	>	tsql:tableFunctionReference mixin
	- tsql:header (long)
	- tsql:quote (string)
	- tsql:usingRowDelimiter (boolean)
	- tsql:selector (string)
	- tsql:escape (boolean)
	- tsql:skip (long)
	- tsql:fixedWidth (boolean)
	- tsql:delimiter (string)
	+ tsql:columns (tsql:textColumn) sns
	+ tsql:file (tsql:expression)

[tsql:xmlTable]	>	tsql:tableFunctionReference mixin
	- tsql:usingDefaultColumn (boolean)
	- tsql:xquery (string)
	+ tsql:columns (tsql:xmlColumn) sns
	+ tsql:passing (tsql:derivedColumn) sns
	+ tsql:namespaces (tsql:xmlNamespaces)

[tsql:joinPredicate]	>	tsql:fromClause mixin
	+ tsql:leftClause (tsql:fromClause)
	+ tsql:rightClause (tsql:fromClause)
	+ tsql:joinType (tsql:joinType)
	+ tsql:joinCriteria (tsql:criteria) sns

[tsql:subqueryFromClause]	>	tsql:fromClause, tsql:subqueryContainer mixin
	- tsql:name (string)
	- tsql:table (boolean)

[tsql:unaryFromClause]	>	tsql:fromClause mixin
	+ tsql:expandedCommand (tsql:command)
	+ tsql:group (tsql:groupSymbol)

[tsql:from]	>	tsql:languageObject mixin
	+ tsql:clauses (tsql:fromClause) sns

[tsql:groupBy]	>	tsql:languageObject mixin
	- tsql:rollup (boolean)
	+ tsql:symbols (tsql:expression) sns

[tsql:into]	>	tsql:languageObject mixin
	+ tsql:group (tsql:groupSymbol)

[tsql:joinType]	>	tsql:languageObject mixin
	- tsql:kind (string) < "JOIN_INNER", "JOIN_RIGHT_OUTER", "JOIN_LEFT_OUTER", "JOIN_FULL_OUTER", "JOIN_CROSS", "JOIN_UNION", "JOIN_SEMI", "JOIN_ANTI_SEMI"

[tsql:limit]	>	tsql:languageObject mixin
	- tsql:strict (boolean)
	- tsql:implicit (boolean)
	+ tsql:offset (tsql:expression)
	+ tsql:rowLimit (tsql:expression)

[tsql:makeDep]	>	tsql:languageObject mixin
	- tsql:max (long)
	- tsql:join (boolean)

[tsql:namespaceItem]	>	tsql:languageObject mixin
	- tsql:prefix (string)
	- tsql:uri (string)

[tsql:nullNode]	>	tsql:languageObject mixin

[tsql:projectedColumn]	>	tsql:languageObject mixin
	- tsql:type (string)
	- tsql:name (string)

[tsql:objectColumn]	>	tsql:projectedColumn mixin
	- tsql:path (string)
	+ tsql:defaultExpression (tsql:expression)

[tsql:textColumn]	>	tsql:projectedColumn mixin
	- tsql:selector (string)
	- tsql:ordinal (boolean)
	- tsql:position (long)
	- tsql:noTrim (boolean)
	- tsql:width (long)

[tsql:xmlColumn]	>	tsql:projectedColumn mixin
	- tsql:ordinal (boolean)
	- tsql:path (string)
	+ tsql:defaultExpression (tsql:expression)

[tsql:option]	>	tsql:languageObject mixin
	- tsql:dependentGroups (string) multiple
	- tsql:noCache (boolean)
	- tsql:notDependentGroups (string) multiple
	- tsql:noCacheGroups (string) multiple
	+ tsql:dependentGroupOptions (tsql:makeDep) sns

[tsql:orderBy]	>	tsql:languageObject mixin
	+ tsql:orderByItems (tsql:orderByItem) sns

[tsql:orderByItem]	>	tsql:languageObject mixin
	- tsql:nullOrdering (string) < "FIRST", "LAST"
	- tsql:ascending (boolean)
	+ tsql:symbol (tsql:expression)

[tsql:spParameter]	>	tsql:languageObject mixin
	- tsql:classTypeClass (string)
	- tsql:metadataiD (string)
	- tsql:usingDefault (boolean)
	- tsql:varArg (boolean)
	- tsql:name (string)
	- tsql:index (long)
	- tsql:parameterType (long)
	+ tsql:resultSetColumn (tsql:elementSymbol) sns
	+ tsql:expression (tsql:expression)

[tsql:select]	>	tsql:languageObject mixin
	- tsql:distinct (boolean)
	+ tsql:symbols (tsql:expression) sns

[tsql:setClause]	>	tsql:languageObject mixin
	+ tsql:value (tsql:expression)
	+ tsql:symbol (tsql:elementSymbol)

[tsql:setClauseList]	>	tsql:languageObject mixin
	+ tsql:setClauses (tsql:setClause) sns

[tsql:sourceHint]	>	tsql:languageObject mixin
	- tsql:useAliases (boolean)
	- tsql:generalHint (string)
	+ tsql:sourceHints (tsql:specificHint) sns

[tsql:specificHint]	>	tsql:languageObject mixin
	- tsql:translatorName (string)
	- tsql:useAliases (boolean)
	- tsql:hint (string)

[tsql:subqueryHint]	>	tsql:languageObject mixin
	- tsql:mergeJoin (boolean)
	- tsql:depJoin (boolean)
	- tsql:noUnnest (boolean)

[tsql:withQueryCommand]	>	tsql:subqueryContainer mixin
	+ tsql:columns (tsql:elementSymbol) sns
	+ tsql:queryExpression (tsql:queryCommand)
	+ tsql:groupSymbol (tsql:groupSymbol)

[tsql:statement]	>	tsql:languageObject mixin abstract
	- tsql:type (string) < "TYPE_UNKNOWN", "TYPE_IF", "TYPE_COMMAND", "TYPE_DECLARE", "TYPE_ERROR", "TYPE_ASSIGNMENT", "TYPE_LOOP", "TYPE_WHILE", "TYPE_CONTINUE", "TYPE_BREAK", "TYPE_UPDATE", "TYPE_COMPOUND", "TYPE_LEAVE", "TYPE_RETURN"

[tsql:assignmentStatement]	>	tsql:statement, tsql:expressionStatement mixin
	+ tsql:command (tsql:command)
	+ tsql:variable (tsql:elementSymbol)
	+ tsql:value (tsql:expression)

[tsql:declareStatement]	>	tsql:assignmentStatement mixin
	- tsql:variableType (string)

[tsql:returnStatement]	>	tsql:assignmentStatement mixin

[tsql:block]	>	tsql:statement, tsql:labeled mixin
	- tsql:atomic (boolean)
	- tsql:exceptionGroup (string)
	+ tsql:statements (tsql:statement) sns
	+ tsql:exceptionStatements (tsql:statement) sns

[tsql:branchingStatement]	>	tsql:statement mixin
	- tsql:label (string)
	- tsql:mode (string) < "BREAK", "CONTINUE", "LEAVE"

[tsql:commandStatement]	>	tsql:statement, tsql:subqueryContainer mixin
	- tsql:returnable (boolean)

[tsql:ifStatement]	>	tsql:statement mixin
	+ tsql:condition (tsql:criteria)
	+ tsql:elseBlock (tsql:block)
	+ tsql:ifBlock (tsql:block)

[tsql:loopStatement]	>	tsql:statement, tsql:labeled, tsql:subqueryContainer mixin
	- tsql:cursorName (string)
	+ tsql:block (tsql:block)

[tsql:raiseStatement]	>	tsql:statement, tsql:expressionStatement mixin
	- tsql:warning (boolean)

[tsql:whileStatement]	>	tsql:statement, tsql:labeled mixin
	+ tsql:block (tsql:block)
	+ tsql:condition (tsql:criteria)

[tsql:exceptionExpression]	>	tsql:expression mixin
	+ tsql:errorCode (tsql:expression)
	+ tsql:message (tsql:expression)
	+ tsql:parentExpression (tsql:expression)
	+ tsql:sqlState (tsql:expression)

[tsql:function]	>	tsql:expression mixin
	- tsql:arrayType (boolean)
	- tsql:name (string)
	- tsql:implicit (boolean)
	+ tsql:args (tsql:expression) sns

[tsql:aggregateSymbol]	>	tsql:function mixin
	- tsql:windowed (boolean)
	- tsql:aggregateFunction (string)
	- tsql:name (string)
	- tsql:distinct (boolean)
	+ tsql:orderBy (tsql:orderBy)
	+ tsql:args (tsql:expression) sns
	+ tsql:condition (tsql:expression)

[tsql:symbol]	>	tsql:languageObject mixin abstract
	- tsql:shortName (string)
	- tsql:name (string)
	- tsql:outputName (string)

[tsql:aliasSymbol]	>	tsql:symbol, tsql:expression mixin
	+ tsql:symbol (tsql:expression)

[tsql:elementSymbol]	>	tsql:symbol, tsql:expression mixin
	- tsql:metadataiD (string)
	- tsql:displayMode (string) < "FULLY_QUALIFIED", "OUTPUT_NAME", "SHORT_OUTPUT_NAME"
	- tsql:displayFullyQualified (boolean)
	- tsql:externalReference (boolean)
	+ tsql:groupSymbol (tsql:groupSymbol)

[tsql:expressionSymbol]	>	tsql:symbol, tsql:expression mixin
	+ tsql:expression (tsql:expression)

[tsql:groupSymbol]	>	tsql:symbol mixin
	- tsql:metadataiD (string)
	- tsql:procedure (boolean)
	- tsql:definition (string)

[tsql:arraySymbol]	>	tsql:expression mixin
	- tsql:implicit (boolean)
	+ tsql:expressions (tsql:expression) sns

[tsql:caseExpression]	>	tsql:expression mixin
	+ tsql:elseExpression (tsql:expression)
	+ tsql:expression (tsql:expression)
	+ tsql:when (tsql:expression) sns
	+ tsql:then (tsql:expression) sns

[tsql:constant]	>	tsql:expression mixin
	- tsql:value (string)
	- tsql:multiValued (boolean)

[tsql:derivedColumn]	>	tsql:languageObject mixin
	- tsql:alias (string)
	- tsql:propagateName (boolean)
	+ tsql:expression (tsql:expression)

[tsql:jsonObject]	>	tsql:expression mixin
	+ tsql:args (tsql:derivedColumn) sns

[tsql:multipleElementSymbol]	>	tsql:expression mixin
	- tsql:name (string)
	+ tsql:elementSymbols (tsql:elementSymbol) sns
	+ tsql:group (tsql:groupSymbol)

[tsql:queryString]	>	tsql:expression mixin
	+ tsql:args (tsql:derivedColumn) sns
	+ tsql:path (tsql:expression)

[tsql:reference]	>	tsql:expression mixin
	- tsql:positional (boolean)
	- tsql:index (long)
	+ tsql:expression (tsql:elementSymbol)

[tsql:scalarSubquery]	>	tsql:expression, tsql:subqueryContainer mixin

[tsql:searchedCaseExpression]	>	tsql:expression mixin
	+ tsql:elseExpression (tsql:expression)
	+ tsql:when (tsql:criteria) sns
	+ tsql:then (tsql:expression) sns

[tsql:textLine]	>	tsql:expression mixin
	- tsql:quote (string)
	- tsql:encoding (string)
	- tsql:includeHeader (boolean)
	- tsql:delimiter (string)
	+ tsql:expressions (tsql:derivedColumn) sns

[tsql:windowFunction]	>	tsql:expression mixin
	+ tsql:windowSpecification (tsql:windowSpecification)
	+ tsql:function (tsql:aggregateSymbol)

[tsql:windowSpecification]	>	tsql:languageObject mixin
	+ tsql:partition (tsql:expression) sns
	+ tsql:orderBy (tsql:orderBy)

[tsql:xmlAttributes]	>	tsql:languageObject mixin
	+ tsql:args (tsql:derivedColumn) sns

[tsql:xmlElement]	>	tsql:expression mixin
	- tsql:name (string)
	+ tsql:attributes (tsql:xmlAttributes)
	+ tsql:namespaces (tsql:xmlNamespaces)
	+ tsql:content (tsql:expression) sns

[tsql:xmlForest]	>	tsql:expression mixin
	+ tsql:arguments (tsql:derivedColumn) sns
	+ tsql:namespaces (tsql:xmlNamespaces)

[tsql:xmlNamespaces]	>	tsql:languageObject mixin
	+ tsql:namespaceItems (tsql:namespaceItem) sns

[tsql:xmlParse]	>	tsql:expression mixin
	- tsql:wellFormed (boolean)
	- tsql:document (boolean)
	+ tsql:expression (tsql:expression)

[tsql:xmlQuery]	>	tsql:expression mixin
	- tsql:emptyOnEmpty (boolean)
	- tsql:xquery (string)
	+ tsql:passing (tsql:derivedColumn) sns
	+ tsql:namespaces (tsql:xmlNamespaces)

[tsql:xmlSerialize]	>	tsql:expression mixin
	- tsql:typeString (string)
	- tsql:version (string)
	- tsql:declaration (boolean)
	- tsql:document (boolean)
	- tsql:encoding (string)
	+ tsql:expression (tsql:expression)


